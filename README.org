* development-documentation
This is the documentation of the tim item manager, a tool for managing packages and other forms of data; written for the development - *not* for users. This documentation should not be considered correct. The user documentation will be written when tim is considered stable.

* timcli
timcli is the CLI tool users is expected to be used for managing items. It is an tool to interface with timd, which is the daemon managing all items and functions of the tim.

** invoking timcli
To invoke timcli, run timcli or just tim - an alias for timcli. The arguments are

#+BEGIN_SRC shell
tim <options> <arguments>
#+END_SRC
When using the alias of options, they can be nested. For example
#+BEGIN_SRC shell
tim -SI
#+END_SRC
To sync and the install item. The execution will be in order of the option. For example, the above sync and the install the item. 
#+BEGIN_SRC shell
tim -IS
#+END_SRC
Would install and the sync. The argument will be chared for all the options.

The following options are available:

| argument     | alias | argument       | description                                           |
|--------------+-------+----------------+-------------------------------------------------------|
| sync         | -S    | reference name | sync the local warehouse to reference                 |
| sync-all     | -Sa   | none           | sync the local warehouse to all references            |
| install      | -I    | item name      | install an item                                       |
| remove       | -R    | item name      | remove an installed item                              |
| query        | -Q    | item name      | query installed items with grep                       |
| upgrade      | -U    | item name      | Upgrade installed item                                |
| upgrade-all  | -Ua   | none           | Upgrade all installed items                           |
| dashboard    | -D    | none           | Enter the tim dashboard                               |
| reload       | -R    | none           | Reload timd and timcli with configuration files       |
| help         | -h    | none           | display help message                                  |

*** sync/sync-all
timd stores all items available for download locally on a database called the warehouse. This ensures any lookup will be quick, and if the reference is down, download will still be possible. Sync updates the warehouse to an local remote, and sync-all to all of them.

*** install
Installs a item to the stores and creates symbolic links as according to the reference configuration.

*** remove
Removes an items symbolic link. If no symbolic links is left and no item depends on it, the item is removed from the store. 

*** query
Query the store items with the users access. The argument is ran as a grep on the item names.

*** upgrade/upgrade-all
Upgrades the entire store with the local warehouse (make sure to sync it).

*** dashboard
Enters a TUI-dashboard where information can be found about all items.

*** help
prints help information.

* timd
timd is the tim daemon. It handles all the core parts of the item managing, and all important operations happens here. It's function includes
1. torrenting function such as installing and seeding all the items. 
2. managing the store
3. managing the warehouse
4. installing (setting up) items after download

** Torrenting
timd uses [[https://github.com/btpd/btpd][btpd]] as its Bittorrent daemon.

** The store
*The store should never be interfaced with directly. All communication to the store should be made through the timd interface to ensure nothing breaks.*

The store is where all items is downloaded to. It is located at 
#+BEGIN_SRC
/opt/tim/store
#+END_SRC
The store contains directories called items. The folder name is:
#+BEGIN_SRC
<item name>-<sha256 hashsum>
#+END_SRC
The item name is derived from the reference, the hashsum is derived from the magnet link to the item. The hashsum ensures security in the system, as every store item is unique. The item name is there for convenience. Each store item contain a REFERENCE file, containing installation data about the item; and a folder called content, which is the root directory of the torrent downloaded. The content directory should *never* be mutated, as is never mutated by timd after installation.

*** REFERENCE file
The REFERENCE file stores data about the store item, used for editing the item. The data includes the following:
- A list of the symbolic links to the item (and there path)
- Custom data as according to the installation instructions from the reference configuration

The goal of the reference file is to ensure the package is managed correctly at edit.

** The warehouse
The warehouse is a collection of files holding information about available items and how to manage them during installation. The warehouse is located at 
#+BEGIN_SRC
/opt/tim/warehouse
#+END_SRC
The db contains the MASTER file and the directory sources.

The sources directory contains a directory for each source. The directory name is 
#+BEGIN_SRC
<source_name>-<iteration>
#+END_SRC
where iteration is the iteration of the source. This directory contains a config file describing how items from this source should be managed, and a folder instances containing symbolic links to the store-items derived from this source.


* timos

* Configuration

** References
